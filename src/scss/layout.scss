// Graphene Design System
// http://bit.ly/graphenedesign
// Layout tokens and styles

@import "breakpoints";

// Display
$display_types: (
  contents: contents,
  block: block,
  flex: flex,
  inline-block: inline-block,
  inline-flex: inline-flex,
  inline: inline,
  hide: none
);
@each $breakpoint, $size in $breakpoints {
  @each $display, $type in $display_types {
    @media (max-width: #{$size}) {
      .b#{$breakpoint}\:#{$display} {
        display: #{$type};
      }
    }
    @media (min-width: #{$size}) {
      .a#{$breakpoint}\:#{$display} {
        display: #{$type};
      }
    }
  }
}
@each $display, $type in $display_types {
  .#{$display} {
    display: #{$type};
  }
}

// Flexbox
.flex-row,
.flex-col {
  display: flex;
}
$flex-directions: (
  row: row,
  row-reverse: row-reverse,
  col: column,
  col-reverse: column-reverse
);
$flex-wraps: (
  nowrap: nowrap,
  wrap: wrap,
  wrap-reverse: wrap-reverse
);
$flex-grow-shrink: (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);

.flex- {
  @each $direction, $rule in $flex-directions {
    &#{$direction} {
      flex-direction: #{$rule};
    }
  }
  @each $wrap, $rule in $flex-wraps {
    &#{$wrap} {
      flex-wrap: #{$rule};
    }
  }
  @each $amount in $flex-grow-shrink {
    &grow-#{$amount} {
      flex-grow: #{$amount};
    }
    &shrink-#{$amount} {
      flex-shrink: #{$amount};
    }
  }
}
$justify-types: (
  left: flex-start,
  center: center,
  right: flex-end,
  space-between: space-between,
  space-around: space-around,
  space-evenly: space-evenly
);

@each $type, $rule in $justify-types {
  .justify-#{$type} {
    justify-content: #{$rule};
  }
}

$align-types: (
  start: flex-start,
  center: center,
  end: flex-end,
  stretch: stretch,
  baseline: baseline
);
@each $type, $rule in $align-types {
  .align-items-#{$type} {
    align-items: #{$rule};
  }
}

// Visibility
$visibility_types: (
  invisible: hidden,
  visible: visible
);
@each $breakpoint, $size in $breakpoints {
  @each $visibility, $type in $visibility_types {
    @media (max-width: #{$size}) {
      .b#{$breakpoint}\:#{$visibility} {
        visibility: #{$type};
      }
    }
    @media (min-width: #{$size}) {
      .a#{$breakpoint}\:#{$visibility} {
        visibility: #{$type};
      }
    }
  }
}
@each $visibility, $type in $visibility_types {
  .#{$visibility} {
    visibility: #{$type};
  }
}

// Positions
$position-types: (static, relative, absolute, fixed, sticky);

@each $type in $position-types {
  .#{$type} {
    position: #{$type};
  }
}

// Pin
$pin-directions: (
  b: bottom,
  l: left,
  r: right,
  t: top
);

.pin {
  @each $dir, $direction in $pin-directions {
    &-#{$dir} {
      #{$direction}: 0;
    }
  }
  &-x {
    left: 0;
    right: 0;
  }
  &-y {
    bottom: 0;
    top: 0;
  }
  &-a {
    bottom: 0;
    left: 0;
    right: 0;
    top: 0;
  }
}

// Text alignment
$text-alignments: (left, right, center, justify);

@each $type in $text-alignments {
  .text-#{$type} {
    text-align: #{$type};
  }
}
